// <auto-generated />
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AloperContext))]
    [Migration("20240504161603_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BusinessObject.Contact", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BusinessObject.ContactFurniture", b =>
                {
                    b.Property<string>("contactId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("idFurniture")
                        .HasColumnType("int");

                    b.HasKey("contactId", "idFurniture");

                    b.HasIndex("idFurniture");

                    b.ToTable("ContactFurniture");
                });

            modelBuilder.Entity("BusinessObject.ContactService", b =>
                {
                    b.Property<string>("contactId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("idService")
                        .HasColumnType("int");

                    b.HasKey("contactId", "idService");

                    b.HasIndex("idService");

                    b.ToTable("ContactService");
                });

            modelBuilder.Entity("BusinessObject.Furniture", b =>
                {
                    b.Property<int>("idFurniture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFurniture"), 1L, 1);

                    b.HasKey("idFurniture");

                    b.ToTable("Furnitures");
                });

            modelBuilder.Entity("BusinessObject.Service", b =>
                {
                    b.Property<int>("idService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idService"), 1L, 1);

                    b.HasKey("idService");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("BusinessObject.ContactFurniture", b =>
                {
                    b.HasOne("BusinessObject.Contact", "Contact")
                        .WithMany("ContactFurnitures")
                        .HasForeignKey("contactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Furniture", "Furniture")
                        .WithMany("ContactFurnitures")
                        .HasForeignKey("idFurniture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Furniture");
                });

            modelBuilder.Entity("BusinessObject.ContactService", b =>
                {
                    b.HasOne("BusinessObject.Contact", "Contact")
                        .WithMany("ContactServices")
                        .HasForeignKey("contactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Service", "Service")
                        .WithMany("ContactServices")
                        .HasForeignKey("idService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("BusinessObject.Contact", b =>
                {
                    b.Navigation("ContactFurnitures");

                    b.Navigation("ContactServices");
                });

            modelBuilder.Entity("BusinessObject.Furniture", b =>
                {
                    b.Navigation("ContactFurnitures");
                });

            modelBuilder.Entity("BusinessObject.Service", b =>
                {
                    b.Navigation("ContactServices");
                });
#pragma warning restore 612, 618
        }
    }
}
